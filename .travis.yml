language: node_js
node_js: '12.16'
branches:
  only:
    - develop
    - master
    - /^(?i:release|hotfix).*$/
services:
  - docker
env:
  global:
    - GIT_SHA=$( git rev-parse HEAD )
    - SC_DEMO_USER_PASSWORD=Schulcloud1!
    - BACKEND_URL=http://localhost:3030
    - PUBLIC_BACKEND_URL=http://localhost:3030
    - FEATURE_TEAMS_ENABLED=true
    - LERNSTORE_MODE=LEGACY
stages:
  - name: Test
    if: NOT (commit_message =~ /(skip-test-stage)/)
  - name: Build
    if: NOT (commit_message =~ /(skip-build-stage)/)
  - name: Deploy
    if: NOT (commit_message =~ /(skip-deploy-stage)/)

jobs:
  include:
    - stage: Test
      name: Mocha
      before_install:
        # move client into subdirectory
        - mkdir -p schulcloud-client
        - mv !(schulcloud-client) schulcloud-client
        # Clone other required repositories and try to switch to branch with same name as current one
        # If current branch is hotfix, switch to branch master
        - |
          git clone https://github.com/hpi-schul-cloud/schulcloud-server.git schulcloud-server
          cd schulcloud-server
          if [[ $TRAVIS_PULL_REQUEST_BRANCH = hotfix* ]]
          then
            echo "Originating branch hotfix detected. Force testing against Server master."
            git checkout master
          else
            git checkout "$TRAVIS_PULL_REQUEST_BRANCH" || git checkout "$TRAVIS_BRANCH"
          fi
          echo "Currently active branch for schulcloud-server: $(git branch | grep \* | cut -d ' ' -f2)"
          cd ..
        - |
          git clone https://github.com/hpi-schul-cloud/docker-compose.git docker-compose
          cd docker-compose
          if [[ $TRAVIS_PULL_REQUEST_BRANCH = hotfix* ]]
          then
            echo "Originating branch hotfix detected. Force testing against Server master."
            git checkout master
          else
            git checkout "$TRAVIS_PULL_REQUEST_BRANCH" || git checkout "$TRAVIS_BRANCH"
          fi
          echo "Currently active branch for docker-compose: $(git branch | grep \* | cut -d ' ' -f2)"
          cd ..
      install:
        # boot server
        - cd docker-compose
        - docker-compose -f docker-compose.end-to-end-tests-Build.yml build server
        - docker-compose -f docker-compose.end-to-end-tests-Build.yml up -d server
        - cd ..
        # client packages are needed for mocha
        - cd schulcloud-client && npm ci && cd ..
      before_script:
        # seed database
        - cd schulcloud-server && npm install && npm run setup && npm run seed && cd ..
      script: cd schulcloud-client && npm run mocha && cd ..
    - script: curl "https://raw.githubusercontent.com/hpi-schul-cloud/end-to-end-tests/master/scripts/ci/fetch.travis.sh" | bash
      name: end-to-end-tests
      env:
        - IT_CLIENT_HOST=nuxtclient
        - IT_CLIENT_PORT=4000
      install:
        - echo "skipping install"
      after_failure:
        - cat /home/travis/.npm/_logs/*debug.log
    - stage: Build
      name: Build All Instances
      language: generic
      before_install:
        - mkdir .build
        - openssl aes-256-cbc -K $encrypted_bce910623bb2_key -iv $encrypted_bce910623bb2_iv -in travis_rsa.enc -out .build/travis_rsa -d
      before_script:
        - echo $TRAVIS_BRANCH
        - echo $TRAVIS_TAG
      script: bash ./build.sh
    - stage: Deploy
      name: Deploy All Instances
      language: generic
      before_install:
        - mkdir .build
        - openssl aes-256-cbc -K $encrypted_bce910623bb2_key -iv $encrypted_bce910623bb2_iv -in travis_rsa.enc -out .build/travis_rsa -d
      before_script:
        - echo $TRAVIS_BRANCH
        - echo $TRAVIS_TAG
      script: bash ./deploy.sh

cache:
  directories:
    - "$HOME/.npm" # cache all packages installed with "npm ci"
