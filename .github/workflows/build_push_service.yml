---
name: Build and push Docker Image

on:
  push:
    branches-ignore:
      - main
      - master

jobs:
  build_instances:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tennens: [default, brb, demo, int, n21, open, thr ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - run: npm ci
      - run: |
         declare -x SC_THEME=${{ matrix.tennens }}
         TZ=Europe/Berlin
         gulp clear-cache
         gulp
      - run: tar -cf ${{ matrix.tennens }}.tar bin build
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.tennens }}
          path: ${{github.workspace }}/${{ matrix.tennens }}.tar
  
  build_app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - run: npm ci
      - run: tar -cf node_modules.tar node_modules
      - uses: actions/upload-artifact@v2
        with:
          name: node_modules
          path: ${{github.workspace }}/node_modules.tar
          
  build_and_push_docker:
    runs-on: ubuntu-latest
    needs: 
      - build_instances
      - build_app
    strategy:
      matrix:
        tennens: [default, brb, demo, int, n21, open, thr ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.tennens }}
      - uses: actions/download-artifact@v2
        with:
          name: node_modules
      - run: tar -xf ${{ matrix.tennens }}.tar
      - run: tar -xf node_modules.tar
      - run: rm -rf ${{ matrix.tennens }}.tar
      - run: rm -rf node_modules.tar
      - name: Docker meta Service Name
        id: docker_meta_img
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch,enable=false,priority=600
            type=sha,enable=true,priority=600,prefix=

      - name: Log into registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_DOCKER_USERNAME }}
          password: ${{ secrets.GHCR_DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push ${{ github.repository }}
        uses: docker/build-push-action@v2
        with:
          build-args: |
            SC_THEME_BUILD=${{ matrix.tennens }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/${{ github.repository }}-${{ matrix.tennens }}:${{ github.sha }}
          labels: ${{ steps.docker_meta_img.outputs.labels }}
          
  dispatchexecute:
    runs-on: ubuntu-latest
    needs: 
      - build_and_push_docker
    steps:
      - uses: actions/checkout@v2
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: hpi-schul-cloud/dof_app_deploy
          event-type: dev-deploy
          client-payload: '{"branch": "${{ steps.extract_branch.outputs.branch}}" }'