---
name: push workflow

on:
  push:
    branches-ignore:
      - dependabot/**

jobs:
  build_and_push_docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tennens: [default, brb, demo, int, n21, open, thr ]
    steps:
      - uses: actions/checkout@v2
      - name: Docker meta Service Name
        id: docker_meta_img
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}-${{ matrix.tennens }}
          tags: |
            type=ref,event=branch,enable=false,priority=600
            type=sha,enable=true,priority=600,prefix=
      - name: Log into registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_DOCKER_USERNAME }}
          password: ${{ secrets.GHCR_DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push ${{ github.repository }}
        uses: docker/build-push-action@v2
        with:
          build-args: |
            SC_THEME_BUILD=${{ matrix.tennens }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/${{ github.repository }}-${{ matrix.tennens }}:${{ github.sha }}
          labels: ${{ steps.docker_meta_img.outputs.labels }}

  branch_name:
      runs-on: ubuntu-latest
      outputs:
          branch: ${{ steps.extract_branch.outputs.branch }}
      steps:
          - name: Extract branch name
            shell: bash
            run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
            id: extract_branch

  dispatch:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_docker
      - branch_name
    steps:
      - uses: actions/checkout@v2
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: hpi-schul-cloud/dof_app_deploy
          event-type: dev-deploy
          client-payload: '{"branch": "${{ needs.branch_name.outputs.branch }}" }'

  end-to-end-tests:
      needs:
          - build_and_push_docker
          - branch_name
      uses: hpi-schul-cloud/end-to-end-tests/.github/workflows/e2e_call.yml@main
      with:
          ref: ${{ github.ref }}

  test-successful:
      runs-on: ubuntu-latest
      needs:
          - end-to-end-tests
      steps:
          - run: echo "Test was successful"
